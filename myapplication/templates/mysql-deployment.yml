apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "myapplication.fullname" . }}
  labels:
    app: {{ template "myapplication.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "myapplication.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "myapplication.name" . }}
    spec:
      containers:
        - name: {{ .Values.mysql.containername }}
          image: {{ .Values.mysql.image.repository }}
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: rootpassword
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: dbname
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
          args: ["--default-authentication-plugin=mysql_native_password"]
          ports:
          - containerPort: 80
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.mysql.persistence.pvcname }}
